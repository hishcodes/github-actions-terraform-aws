name: "Terraform Destroy"

on:
  workflow_dispatch: 

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ter_files
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Remove S3 and DynamoDB from State
        id: state-rm
        run: |
            terraform state rm module.tf-state.aws_dynamodb_table.tf_locking_table
            terraform state rm module.tf-state.aws_s3_bucket.tf-state-bucket
            terraform state rm module.tf-state.aws_s3_bucket_server_side_encryption_configuration.bucker_sse
            terraform state rm module.tf-state.aws_s3_bucket_versioning.bucket_versioning

      - name: Destroy Resources
        run: terraform destroy -auto-approve

      - name: Add S3 and DynamoDB to State
        id: state-add
        run: |
            terraform import module.tf-state.aws_dynamodb_table.tf_locking_table "tf-locking"
            terraform import module.tf-state.aws_s3_bucket.tf-state-bucket "hisham-demo-tf-bucket"
            terraform import module.tf-state.aws_s3_bucket_server_side_encryption_configuration.bucker_sse "hisham-demo-tf-bucket"
            terraform import module.tf-state.aws_s3_bucket_versioning.bucket_versioning "hisham-demo-tf-bucket"
            
